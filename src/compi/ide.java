/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compi;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIDefaults;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 *
 * @author ospeg
 */
public class ide extends javax.swing.JFrame {
        
        JFileChooser seleccionar= new JFileChooser();
        File archivo;
        FileInputStream entrada;
        FileOutputStream salida;
        String fileName;
    /**
     * Creates new form ide
     */
    public ide() {
        initComponents();
        this.getContentPane().setBackground(new java.awt.Color(788482));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        codeArea = new javax.swing.JTextArea();
        compilation = new javax.swing.JTabbedPane();
        lexic = new javax.swing.JPanel();
        sintac = new javax.swing.JPanel();
        semant = new javax.swing.JPanel();
        codinter = new javax.swing.JPanel();
        results = new javax.swing.JTabbedPane();
        error = new javax.swing.JPanel();
        result = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        open = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        saveas = new javax.swing.JMenuItem();
        format = new javax.swing.JMenu();
        compile = new javax.swing.JMenu();
        help = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        codeArea.setBackground(new java.awt.Color(78, 84, 82));
        codeArea.setColumns(20);
        codeArea.setForeground(new java.awt.Color(232, 232, 232));
        codeArea.setRows(5);
        codeArea.setDisabledTextColor(new java.awt.Color(232, 232, 232));
        jScrollPane2.setViewportView(codeArea);

        compilation.setBackground(new java.awt.Color(0, 0, 0));
        compilation.setForeground(new java.awt.Color(255, 255, 255));

        lexic.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout lexicLayout = new javax.swing.GroupLayout(lexic);
        lexic.setLayout(lexicLayout);
        lexicLayout.setHorizontalGroup(
            lexicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        lexicLayout.setVerticalGroup(
            lexicLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );

        compilation.addTab("Léxico", lexic);

        sintac.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout sintacLayout = new javax.swing.GroupLayout(sintac);
        sintac.setLayout(sintacLayout);
        sintacLayout.setHorizontalGroup(
            sintacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        sintacLayout.setVerticalGroup(
            sintacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );

        compilation.addTab("Sintáctico", sintac);

        semant.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout semantLayout = new javax.swing.GroupLayout(semant);
        semant.setLayout(semantLayout);
        semantLayout.setHorizontalGroup(
            semantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        semantLayout.setVerticalGroup(
            semantLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );

        compilation.addTab("Semántico", semant);

        codinter.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout codinterLayout = new javax.swing.GroupLayout(codinter);
        codinter.setLayout(codinterLayout);
        codinterLayout.setHorizontalGroup(
            codinterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 415, Short.MAX_VALUE)
        );
        codinterLayout.setVerticalGroup(
            codinterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );

        compilation.addTab("Código Intermedio", codinter);

        results.setBackground(new java.awt.Color(0, 0, 0));
        results.setForeground(new java.awt.Color(255, 255, 255));

        error.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout errorLayout = new javax.swing.GroupLayout(error);
        error.setLayout(errorLayout);
        errorLayout.setHorizontalGroup(
            errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1175, Short.MAX_VALUE)
        );
        errorLayout.setVerticalGroup(
            errorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );

        results.addTab("Errores", error);

        result.setBackground(new java.awt.Color(78, 84, 82));

        javax.swing.GroupLayout resultLayout = new javax.swing.GroupLayout(result);
        result.setLayout(resultLayout);
        resultLayout.setHorizontalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1175, Short.MAX_VALUE)
        );
        resultLayout.setVerticalGroup(
            resultLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );

        results.addTab("Resultados", result);

        open.setText("Archivo");

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        abrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compi/png/open.png"))); // NOI18N
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        open.add(abrir);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compi/png/close.png"))); // NOI18N
        close.setText("Cerrar");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        open.add(close);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compi/png/save.png"))); // NOI18N
        save.setText("Guardar");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        open.add(save);

        saveas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/compi/png/saveas.png"))); // NOI18N
        saveas.setText("Guardar Como");
        saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasActionPerformed(evt);
            }
        });
        open.add(saveas);

        jMenuBar1.add(open);

        format.setText("Formato");
        jMenuBar1.add(format);

        compile.setText("Compilar");
        jMenuBar1.add(compile);

        help.setText("Ayuda");
        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(compilation)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(results)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(compilation)
                    .addComponent(jScrollPane2))
                .addContainerGap(168, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(521, Short.MAX_VALUE)
                    .addComponent(results, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
        try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
                }
        
        JFileChooser jfile = new JFileChooser();
        
        jfile.setAcceptAllFileFilterUsed(false);
        
        jfile.showOpenDialog(this);
        File archive = jfile.getSelectedFile();
        fileName = archive.getAbsolutePath();
        
        if(archive.getName().endsWith("txt")) {
            String doc = OpenFile(archive);
            codeArea.setText(doc);
        } else
            JOptionPane.showMessageDialog(null, "Archivo no compatible.");
        
        
    }//GEN-LAST:event_abrirActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        codeArea.setText("");
        fileName = "";
    }//GEN-LAST:event_closeActionPerformed

    
    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        File archive=new File(fileName);
        
        String doc = codeArea.getText();
        byte[] b = doc.getBytes();
                
        try {
            archive.createNewFile();
            FileOutputStream out = new FileOutputStream(archive);
            out.write(b);
        } catch (IOException ex) {
            Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
        }  
        
    }//GEN-LAST:event_saveActionPerformed

    private void saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasActionPerformed
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        JFileChooser jfile = new JFileChooser();
        
        jfile.setAcceptAllFileFilterUsed(false);
        
        jfile.showSaveDialog(this);
        
        String temp = jfile.getSelectedFile().getAbsolutePath();
        
        if(!temp.endsWith(".txt"))
        {
            temp += ".txt";
            jfile.setSelectedFile(new File(temp));
        }
        
        File archive = jfile.getSelectedFile();
        
        String doc = codeArea.getText();
        byte[] b = doc.getBytes();
                
        try {
            archive.createNewFile();
            FileOutputStream out = new FileOutputStream(archive);
            out.write(b);
            JOptionPane.showMessageDialog(null, "Archivo Guardado.");
        } catch (IOException ex) {
            Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
        }  
            
        
    }//GEN-LAST:event_saveasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ide.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ide().setVisible(true);
            }
        });
    }
    
    public String OpenFile(File archive) {
        FileInputStream input;
        
        String doc = "";
        try {
            input = new FileInputStream(archive);
            int ascci;
            while((ascci = input.read())!=-1) {
                char carac = (char) ascci;
                doc += carac;
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ide.class.getName()).log(Level.SEVERE, null, ex);
        }
        return doc;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem close;
    private javax.swing.JTextArea codeArea;
    private javax.swing.JPanel codinter;
    private javax.swing.JTabbedPane compilation;
    private javax.swing.JMenu compile;
    private javax.swing.JPanel error;
    private javax.swing.JMenu format;
    private javax.swing.JMenu help;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel lexic;
    private javax.swing.JMenu open;
    private javax.swing.JPanel result;
    private javax.swing.JTabbedPane results;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem saveas;
    private javax.swing.JPanel semant;
    private javax.swing.JPanel sintac;
    // End of variables declaration//GEN-END:variables
}
